// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResoApp;

#nullable disable

namespace ResoApp.Migrations
{
    [DbContext(typeof(DbResturantContext))]
    [Migration("20221214083327_additems")]
    partial class additems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResoApp.TbCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("categoryname");

                    b.HasKey("Id");

                    b.ToTable("TbCategories");
                });

            modelBuilder.Entity("ResoApp.TbInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Invoicetotal")
                        .HasColumnType("int")
                        .HasColumnName("invoicetotal");

                    b.Property<int>("Itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.HasKey("Id");

                    b.HasIndex("Itemid");

                    b.ToTable("TbInvoices");
                });

            modelBuilder.Entity("ResoApp.TbItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Itemname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("itemname");

                    b.Property<decimal>("Itemprice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("itemprice");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Categoryid" }, "IX_TbItems_categoryid");

                    b.ToTable("TbItems");
                });

            modelBuilder.Entity("ResoApp.TbInvoice", b =>
                {
                    b.HasOne("ResoApp.TbItem", "Item")
                        .WithMany("TbInvoices")
                        .HasForeignKey("Itemid")
                        .IsRequired()
                        .HasConstraintName("FK_TbInvoices_TbItems");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ResoApp.TbItem", b =>
                {
                    b.HasOne("ResoApp.TbCategory", "Category")
                        .WithMany("TbItems")
                        .HasForeignKey("Categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ResoApp.TbCategory", b =>
                {
                    b.Navigation("TbItems");
                });

            modelBuilder.Entity("ResoApp.TbItem", b =>
                {
                    b.Navigation("TbInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
